// @import '~@angular/cdk/cdk/a11y/a11y';

$sbb-fast-out-slow-in-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;
$sbb-elevation-transition-duration: 280ms !default;
$sbb-elevation-transition-timing-function: $sbb-fast-out-slow-in-timing-function;
$sbb-elevation-color: black !default;
$sbb-elevation-opacity: 1 !default;
$_sbb-elevation-prefix: 'sbb-elevation-z';

@function _get-umbra-map($color, $opacity) {
  @return (
    0: '0px 0px 0px 0px #{rgba($color, $opacity * 0.2)}',
    1: '0px 2px 1px -1px #{rgba($color, $opacity * 0.2)}',
    2: '0px 3px 1px -2px #{rgba($color, $opacity * 0.2)}',
    3: '0px 3px 3px -2px #{rgba($color, $opacity * 0.2)}',
    4: '0px 2px 4px -1px #{rgba($color, $opacity * 0.2)}',
    5: '0px 3px 5px -1px #{rgba($color, $opacity * 0.2)}',
    6: '0px 3px 5px -1px #{rgba($color, $opacity * 0.2)}',
    7: '0px 4px 5px -2px #{rgba($color, $opacity * 0.2)}',
    8: '0px 5px 5px -3px #{rgba($color, $opacity * 0.2)}',
    9: '0px 5px 6px -3px #{rgba($color, $opacity * 0.2)}',
    10: '0px 6px 6px -3px #{rgba($color, $opacity * 0.2)}',
    11: '0px 6px 7px -4px #{rgba($color, $opacity * 0.2)}',
    12: '0px 7px 8px -4px #{rgba($color, $opacity * 0.2)}',
    13: '0px 7px 8px -4px #{rgba($color, $opacity * 0.2)}',
    14: '0px 7px 9px -4px #{rgba($color, $opacity * 0.2)}',
    15: '0px 8px 9px -5px #{rgba($color, $opacity * 0.2)}',
    16: '0px 8px 10px -5px #{rgba($color, $opacity * 0.2)}',
    17: '0px 8px 11px -5px #{rgba($color, $opacity * 0.2)}',
    18: '0px 9px 11px -5px #{rgba($color, $opacity * 0.2)}',
    19: '0px 9px 12px -6px #{rgba($color, $opacity * 0.2)}',
    20: '0px 10px 13px -6px #{rgba($color, $opacity * 0.2)}',
    21: '0px 10px 13px -6px #{rgba($color, $opacity * 0.2)}',
    22: '0px 10px 14px -6px #{rgba($color, $opacity * 0.2)}',
    23: '0px 11px 14px -7px #{rgba($color, $opacity * 0.2)}',
    24: '0px 11px 15px -7px #{rgba($color, $opacity * 0.2)}'
  );
}

@function _get-penumbra-map($color, $opacity) {
  @return (
    0: '0px 0px 0px 0px #{rgba($color, $opacity * 0.14)}',
    1: '0px 1px 1px 0px #{rgba($color, $opacity * 0.14)}',
    2: '0px 2px 2px 0px #{rgba($color, $opacity * 0.14)}',
    3: '0px 3px 4px 0px #{rgba($color, $opacity * 0.14)}',
    4: '0px 4px 5px 0px #{rgba($color, $opacity * 0.14)}',
    5: '0px 5px 8px 0px #{rgba($color, $opacity * 0.14)}',
    6: '0px 6px 10px 0px #{rgba($color, $opacity * 0.14)}',
    7: '0px 7px 10px 1px #{rgba($color, $opacity * 0.14)}',
    8: '0px 8px 10px 1px #{rgba($color, $opacity * 0.14)}',
    9: '0px 9px 12px 1px #{rgba($color, $opacity * 0.14)}',
    10: '0px 10px 14px 1px #{rgba($color, $opacity * 0.14)}',
    11: '0px 11px 15px 1px #{rgba($color, $opacity * 0.14)}',
    12: '0px 12px 17px 2px #{rgba($color, $opacity * 0.14)}',
    13: '0px 13px 19px 2px #{rgba($color, $opacity * 0.14)}',
    14: '0px 14px 21px 2px #{rgba($color, $opacity * 0.14)}',
    15: '0px 15px 22px 2px #{rgba($color, $opacity * 0.14)}',
    16: '0px 16px 24px 2px #{rgba($color, $opacity * 0.14)}',
    17: '0px 17px 26px 2px #{rgba($color, $opacity * 0.14)}',
    18: '0px 18px 28px 2px #{rgba($color, $opacity * 0.14)}',
    19: '0px 19px 29px 2px #{rgba($color, $opacity * 0.14)}',
    20: '0px 20px 31px 3px #{rgba($color, $opacity * 0.14)}',
    21: '0px 21px 33px 3px #{rgba($color, $opacity * 0.14)}',
    22: '0px 22px 35px 3px #{rgba($color, $opacity * 0.14)}',
    23: '0px 23px 36px 3px #{rgba($color, $opacity * 0.14)}',
    24: '0px 24px 38px 3px #{rgba($color, $opacity * 0.14)}'
  );
}

@function _get-ambient-map($color, $opacity) {
  @return (
    0: '0px 0px 0px 0px #{rgba($color, $opacity * 0.12)}',
    1: '0px 1px 3px 0px #{rgba($color, $opacity * 0.12)}',
    2: '0px 1px 5px 0px #{rgba($color, $opacity * 0.12)}',
    3: '0px 1px 8px 0px #{rgba($color, $opacity * 0.12)}',
    4: '0px 1px 10px 0px #{rgba($color, $opacity * 0.12)}',
    5: '0px 1px 14px 0px #{rgba($color, $opacity * 0.12)}',
    6: '0px 1px 18px 0px #{rgba($color, $opacity * 0.12)}',
    7: '0px 2px 16px 1px #{rgba($color, $opacity * 0.12)}',
    8: '0px 3px 14px 2px #{rgba($color, $opacity * 0.12)}',
    9: '0px 3px 16px 2px #{rgba($color, $opacity * 0.12)}',
    10: '0px 4px 18px 3px #{rgba($color, $opacity * 0.12)}',
    11: '0px 4px 20px 3px #{rgba($color, $opacity * 0.12)}',
    12: '0px 5px 22px 4px #{rgba($color, $opacity * 0.12)}',
    13: '0px 5px 24px 4px #{rgba($color, $opacity * 0.12)}',
    14: '0px 5px 26px 4px #{rgba($color, $opacity * 0.12)}',
    15: '0px 6px 28px 5px #{rgba($color, $opacity * 0.12)}',
    16: '0px 6px 30px 5px #{rgba($color, $opacity * 0.12)}',
    17: '0px 6px 32px 5px #{rgba($color, $opacity * 0.12)}',
    18: '0px 7px 34px 6px #{rgba($color, $opacity * 0.12)}',
    19: '0px 7px 36px 6px #{rgba($color, $opacity * 0.12)}',
    20: '0px 8px 38px 7px #{rgba($color, $opacity * 0.12)}',
    21: '0px 8px 40px 7px #{rgba($color, $opacity * 0.12)}',
    22: '0px 8px 42px 7px #{rgba($color, $opacity * 0.12)}',
    23: '0px 9px 44px 8px #{rgba($color, $opacity * 0.12)}',
    24: '0px 9px 46px 8px #{rgba($color, $opacity * 0.12)}'
  );
}

@mixin sbb-elevation($zValue, $color: $sbb-elevation-color, $opacity: $sbb-elevation-opacity) {
  @if type-of($zValue) != number or not unitless($zValue) {
    @error '$zValue must be a unitless number';
  }
  @if $zValue < 0 or $zValue > 24 {
    @error '$zValue must be between 0 and 24';
  }

  box-shadow: #{map-get(_get-umbra-map($color, $opacity), $zValue)},
              #{map-get(_get-penumbra-map($color, $opacity), $zValue)},
              #{map-get(_get-ambient-map($color, $opacity), $zValue)};
}

@function sbb-elevation-transition-property-value(
    $duration: $sbb-elevation-transition-duration,
    $easing: $sbb-elevation-transition-timing-function) {
  @return box-shadow #{$duration} #{$easing};
}

@mixin sbb-elevation-transition(
    $duration: $sbb-elevation-transition-duration,
    $easing: $sbb-elevation-transition-timing-function) {
  transition: sbb-elevation-transition-property-value($duration, $easing);
}

@mixin sbb-overridable-elevation(
    $zValue,
    $color: $sbb-elevation-color,
    $opacity: $sbb-elevation-opacity) {
  &:not([class*='#{$_sbb-elevation-prefix}']) {
    @include sbb-elevation($zValue, $color, $opacity);
  }
}

.sbb-expansion-panel {
  @include sbb-elevation-transition;
  @include sbb-overridable-elevation(2);
  box-sizing: content-box;
  display: block;
  margin: 0;
  transition: margin 225ms $sbb-fast-out-slow-in-timing-function;

  // @include cdk-high-contrast {
  //   outline: solid 1px;
  // }
}

.sbb-expansion-panel-content {
  overflow: hidden;

  &.sbb-expanded {
    overflow: visible;
  }
}

.sbb-expansion-panel-body {
  padding: 0 24px 16px;
}

.sbb-expansion-panel-spacing {
  margin: 16px 0;

  .sbb-accordion > &:first-child,
  .sbb-accordion > *:first-child:not(.sbb-expansion-panel) & {
    margin-top: 0;
  }

  .sbb-accordion > &:last-child,
  .sbb-accordion > *:last-child:not(.sbb-expansion-panel) & {
    margin-bottom: 0;
  }
}

.sbb-action-row {
  border-top-style: solid;
  border-top-width: 1px;
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  padding: 16px 8px 16px 24px;

  button.sbb-button {
    margin-left: 8px;

    [dir='rtl'] & {
      margin-left: 0;
      margin-right: 8px;
    }
  }
}