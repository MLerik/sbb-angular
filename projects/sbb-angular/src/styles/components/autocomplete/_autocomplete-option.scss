@mixin optionBase() {
  @include ellipsis;

  position: relative;
  display: block;
  text-decoration: none;
  padding: toPx(4) $autocompletePaddingX;
  text-align: left;
  max-width: 100%;
  cursor: pointer;
  outline: 0;

  &:first-of-type {
    padding-top: $autocompletePaddingTop;
  }
  &:last-of-type {
    padding-bottom: $autocompletePaddingBottom;
  }

  @include mq($from: desktop4k) {
    font-size: toPx($sizeFontDefault * $scalingFactor4k);
    padding: toPx(4 * $scalingFactor4k) toPx($autocompletePaddingX * $scalingFactor4k);
    &:first-of-type {
      padding-top: toPx($autocompletePaddingTop * $scalingFactor4k);
    }
    &:last-of-type {
      padding-bottom: toPx($autocompletePaddingBottom * $scalingFactor4k);
    }
  }
  @include mq($from: desktop5k) {
    font-size: toPx($sizeFontDefault * $scalingFactor5k);
    padding: toPx(4 * $scalingFactor5k) toPx($autocompletePaddingX * $scalingFactor5k);
    &:first-of-type {
      padding-top: toPx($autocompletePaddingTop * $scalingFactor5k);
    }
    &:last-of-type {
      padding-bottom: toPx($autocompletePaddingBottom * $scalingFactor5k);
    }
  }

  .highlight {
    font-family: $autocompleteHighlightTexBold;
  }

  &:not(.sbb-active) .highlight {
    color: $autocompleteHoverColor;
  }

  &.sbb-active,
  &:hover,
  &:focus,
  &:hover .highlight,
  &:focus .highlight {
    color: $autocompleteOptionHoverColor;
  }

  .sbb-option-text {
    @include optionText();
  }
}

@mixin optionText() {
  display: inline-block;
  flex-grow: 1;
  overflow: hidden;
  text-overflow: ellipsis;
}
