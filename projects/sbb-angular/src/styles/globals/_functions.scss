// ----------------------------------------------------------------------------------------------------
// Functions
// ----------------------------------------------------------------------------------------------------

@import 'variables';

// Helper Functions
// ----------------------------------------------------------------------------------------------------

@function px-to-em($px, $ref: $size-font-base) {
	@return to-em(to-px($px) / to-px($ref));
}

@function px-to-rem($px) {
	@return to-rem(to-px($px) / to-px($size-font-base));
}

@function px-to-pc($px, $ref: $sizeWidthContent) {
	@return (to-px($px) / to-px($ref) * 100%);
}

@function to-em($val) {
	@return ($val + 0em);
}

@function to-rem($val) {
	@return ($val + 0rem);
}

@function to-px($val) {
	@return ($val + 0px);
}

// Spacings
// ----------------------------------------------------------------------------------------------------

@function paragraph-spacing($font-size: $size-font-default) {
	@return to-em($gutter-height/$font-size); // 8px
}

@function inner-component-spacing($font-size: $size-font-default) {
	@return to-em(($gutter-height * 3)/$font-size); // 24px
}

@function inner-component-bottom-spacing-small($font-size: $size-font-default) {
	@return to-em(($gutter-height * 4.5)/$font-size); // 36px
}

@function inter-component-spacing-tiny($font-size: $size-font-default) {
	@return to-em(($gutter-height * 3)/$font-size); // 24px
}

@function inter-component-spacing-small($font-size: $size-font-default) {
	@return to-em(($gutter-height * 6)/$font-size); // 48px
}

@function inter-component-spacing-tablet($font-size: $size-font-default) {
	@return to-em(($gutter-height * 7)/$font-size); // 56px
}

@function inter-component-spacing($font-size: $size-font-default) {
	@return to-em(($gutter-height * 10)/$font-size); // 80px
}

// Arithmetic functions
// ----------------------------------------------------------------------------------------------------

// Calculate power
@function pow($number, $exp) {
	$value: 1;
	@if $exp > 0 {
		@for $i from 1 through $exp {
			$value: $value * $number;
		}
	}
	@else if $exp < 0 {
		@for $i from 1 through -$exp {
			$value: $value / $number;
		}
	}
	@return $value;
}

// Factorial function
@function fact($number) {
	$value: 1;
	@if $number > 0 {
		@for $i from 1 through $number {
			$value: $value * $i;
		}
	}
	@return $value;
}

// Trigonometric functions
// ----------------------------------------------------------------------------------------------------

// Pi constant
@function pi() {
	@return 3.14159265359;
}

// Get radians from angle
@function rad($angle) {
	$unit: unit($angle);
	$unitless: $angle / ($angle * 0 + 1);
	@if $unit == deg {
		$unitless: $unitless / 180 * pi();
	}
	@return $unitless;
}

// Sine function
@function sin($angle) {
	$sin: 0;
	$angle: rad($angle);
	@for $i from 0 through 10 {
		$sin: $sin + pow(-1, $i) * pow($angle, (2 * $i + 1)) / fact(2 * $i + 1);
	}
	@return $sin;
}

// Cosine function
@function cos($angle) {
	$cos: 0;
	$angle: rad($angle);
	@for $i from 0 through 10 {
		$cos: $cos + pow(-1, $i) * pow($angle, 2 * $i) / fact(2 * $i);
	}
	@return $cos;
}

// Tangent function
@function tan($angle) {
	@return sin($angle) / cos($angle);
}
