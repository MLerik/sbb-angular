/*** 
* BUTTON THEMES MIXINS AND PLACEHOLDERS
***/

/*** PRIMARY BUTTON ***/
@mixin primaryButton {
	color: $buttonDefaultColor;
	background-color: $buttonDefaultBgColor;

	&:not(:disabled) {
		&:hover,
		&:focus {
			background-color: $buttonDefaultBgColorHover;
			color: $buttonDefaultColor;

			.mod-svgsprite-icon {
				fill: $buttonDefaultColor;
			}
		}
	}
}

/*** 
* PRIMARY BUTTON PLACEHOLDER 
* - Include primary mixin in order to allow extension 
* 	in order to get a more compact compiled css
***/
%primaryButton {
	@include primaryButton();
}

/*** PRIMARY BUTTON WITH ICON ***/
@mixin primaryIconButton {
	@extend %primaryButton;
	@extend %arrowbuttons;
}

/*** SECONDARY BUTTON ***/
@mixin secondaryButton {
	color: $buttonSecondaryColor;
	background-color: $buttonSecondaryBgColor;

	&:not(:disabled) {
		&:hover,
		&:focus {
			background-color: $buttonSecondaryBgColorHover;
			color: $buttonSecondaryColor;
		}
	}
}

/*** 
* SECONDARY BUTTON PLACEHOLDER 
* - Include secondary mixin in order to allow extension 
* 	in order to get a more compact compiled css
***/
%secondaryButton {
	@include secondaryButton;
}

/*** SECONDARY BUTTON WITH ICON ***/
@mixin secondaryIconButton {
	@extend %secondaryButton;
	@extend %arrowbuttons;

	.mod-svgsprite-icon {
		fill: $buttonSecondaryColor;
	}

	&:hover,
	&:focus {
		.mod-svgsprite-icon {
			fill: $buttonSecondaryColor;
		}
	}

}

/*** GHOST BUTTON ***/
@mixin ghostButtonPositive($fontSize: $buttonSizeFontDefault) {
	background-color: transparent;
	box-shadow: $buttonGhostShadow;
	color: $buttonGhostColor;
	transition: box-shadow $linkiconAnimation, height $linkiconAnimation, padding-left $linkiconAnimation, padding-right $linkiconAnimation, color $linkiconAnimation;

	@media screen and (-ms-high-contrast: active) {
		border: pxToEm(1) solid currentColor;
	}

	&:not(:disabled) {
		&:hover,
		&:focus {
			box-shadow: $buttonGhostShadowHover;
			color: $buttonGhostColorHover;
			background-color: transparent;
			border-color: currentColor;

			.mod-svgsprite-icon {
				fill: currentColor;
			}
		}
	}
}

/*** 
* GHOST BUTTON PLACEHOLDER 
* - Include ghost mixin in order to allow extension 
* 	in order to get a more compact compiled css
***/
%ghostButtonPositive {
	@include ghostButtonPositive;
}

/*** GHOST BUTTON WITH ICON ***/
@mixin ghostIconButtonPositive {
	@extend %ghostButtonPositive;
	@extend %arrowbuttons;

	.mod-svgsprite-icon {
		fill: $buttonGhostColorHover;
	}

	&:hover,
	&:focus {
		.mod-svgsprite-icon {
			fill: $buttonGhostColorHover;
		}
	}
}

/*** FRAMELESS BUTTON ***/
@mixin framelessButton($fontSize: $buttonSizeFontDefault) {
	background-color: transparent;
	color: $buttonFramelessColor;

	&:not(:disabled) {
		&:hover,
		&:focus {
			color: $colorRed125;
			background-color: transparent;
			border-color: transparent;
		}
	}
}

/*** 
* FRAMELESS BUTTON PLACEHOLDER 
* - Include frameless mixin in order to allow extension 
* 	in order to get a more compact compiled css
***/
%framelessButton {
	@include framelessButton;
}

/*** FRAMELESS BUTTON WITH ICON ***/
@mixin framelessIconButton ($fontSize: $sizeFontDefault) {
	@extend %framelessButton;
	@extend %arrowbuttons;

	.mod-svgsprite-icon {
		fill: $buttonFramelessColor;
	}

	&:hover,
	&:focus {
		.mod-svgsprite-icon {
			fill: $buttonFramelessColorHover;
		}
	}
}

/*** DISABLED BUTTON ***/
@mixin disabledButton {
	@extend %ghostButtonPositive;

	text-decoration: line-through;

	.mod-svgsprite-icon {
		display: none;
	}
}
