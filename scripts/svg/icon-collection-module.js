const { EOL } = require('os');
const { IconModule } = require('./icon-module');

class IconCollectionModule extends IconModule {
  constructor(modules, kebabCaseName) {
    super(
      modules,
      kebabCaseName || modules
        .join('/')
        .replace(/[^a-zA-Z0-9]+/g, '-')
        .replace(/^[\w\W]+$/g, m => `icon-collection-${m}`));
    this.childModules = [];
    this.importPath = `./${this.modules[this.modules.length - 1]}/${this.outputFileBaseName}`;
  }

  addModules(iconModules) {
    this.childModules.push(...iconModules);
    return this;
  }

  iconComponentDetails() {
    return this.childModules
      .reduce((current, next) => current.concat(next.iconComponentDetails()), []);
  }

  async _angularTemplate() {
    const modules = this.childModules
      .map(m => `    ${m.moduleName},`)
      .join(EOL);
    const imports = this.childModules
      .sort((a, b) => a.importPath.localeCompare(b.importPath))
      .map(m => `import { ${m.moduleName} } from '${m.importPath}';`)
      .join(EOL);
    return `/*
 * Don't delete this file, it's autogenerated by the ACL icons build script
 */
import { NgModule } from '@angular/core';

${imports}

@NgModule({
  imports: [
${modules}
  ],
  exports: [
${modules}
  ]
})
export class ${this.moduleName} { }
`;
  }
}

exports.IconCollectionModule = IconCollectionModule;
